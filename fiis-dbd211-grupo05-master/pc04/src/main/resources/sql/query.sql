--Algunas sentencias SQL que colaboré para la funcionalidad de la página
-- Cargar página principal
SELECT P.NOMBRE,P.CODIGO,P.ESTADO,
CONCAT(E.PRIM_NOMBRE,' ', E.PRIM_APELLIDO,' ',E.SEG_APELLIDO),
P.FECHA_INICIO_REAL,P.FECHA_ENTREGA_PROGRAM,COALESCE(TO_CHAR(P.FECHA_ENTREGA_REAL,'DD/MM/YYYY'),'Proyecto por terminar')
FROM PROYECTO P,STAFF_PROYECTO S,EMPLEADO E,USUARIO U,REPEMPRESA R
WHERE S.CODIGO_PROY = P.CODIGO AND E.DNI = S.DNI_EMPLEADO AND
P.FECHA_INICIO_REAL = (SELECT MAX(FECHA_INICIO_REAL) FROM PROYECTO
WHERE DNI_REPCLIENTE = P.dni_repcliente)
AND S.ROL_PROY = 'Jefe' AND P.dni_repcliente=R.DNI AND
R.USERNAME=<1>

-- Cargar página de proyectos
SELECT P.CODIGO, P.NOMBRE, P.FECHA_INICIO_REAL, P.ESTADO
FROM PROYECTO P
JOIN REPEMPRESA R ON R.DNI = P.DNI_REPCLIENTE
WHERE R.USERNAME = <1>;

--Botón de filtro
SELECT P.CODIGO, P.NOMBRE, P.FECHA_INICIO_REAL, P.ESTADO
FROM PROYECTO P
JOIN REPEMPRESA R ON R.DNI = P.DNI_REPCLIENTE
WHERE R.USERNAME = <1> AND P.FECHA_INICIO_REAL BETWEEN
TO_DATE('<2>','DD/MM/YYYY')AND TO_DATE('<3>','DD/MM/YYYY') ;

--Botón Registrar
INSERT INTO PROYECTO
(NOMBRE,CODIGO,ESTADO,FECHA_INICIO_PROGRAM,FECHA_ENTREGA_PROGRAM,DNI_
REPCLIENTE)
VALUES (<1>,<2>,<3>,<5>,<6>,<7>);

--Cargar datos de un proyecto seleccionado
SELECT
P.NOMBRE,P.CODIGO,P.ESTADO,P.FECHA_INICIO_REAL,P.FECHA_ENTREGA_PROGRA
M, P.FECHA_ENTREGA_REAL, E.PRIM_APELLIDO|| ‘ ‘ ||E.SEG_APELLIDO||’
‘||E.PRIM_NOMBRE
FROM PROYECTO P , EMPLEADO E, STAFF_PROYECTO S
WHERE P.CODIGO = <1>
AND S.CODIGO_PROY = P.CODIGO
AND E.DNI = S.DNI_EMPLEADO
AND S.ROL_PROY = ‘Jefe’;

--Cargar página de todas las actividades
SELECT A.CODIGO,A.CODIGO_TIPO, T.NOMBRE ,
COALESCE(TO_CHAR(A.FECHA_INICIO_REAL,'DD/MM/YYYY'),'NO INICIADO'),
A.ESTADO,
(SELECT COUNT(*) FROM OBSERVACION O,INFORME I
WHERE O.ESTADO <> 'FINALIZADO' AND I.CODIGO = O.CODIGO_INF
AND I.CODIGO_ACT = A.CODIGO AND I.CODIGO_TIPO_ACT=A.CODIGO_TIPO)
FROM ACTIVIDAD A, TIPOACTIVIDAD T
WHERE A.CODIGO_TIPO = T.CODIGO AND A.CODIGO_PROY = <1>;

--Cargar página de una actividad seleccionada
SELECT A.CODIGO, TO_CHAR(A.FECHA_INICIO_PROGRAM,'DD/MM/YYYY'),
TO_CHAR(A.FECHA_FIN_PROGRAM,'DD/MM/YYYY'),A.ESTADO, T.CODIGO,
T.DESCRIPCION,T.NOMBRE,T.FREC_INSPECCION,T.DOC_REFERENCIA,T.TIPO_VERI
FICACION,T.TIPO_INSPECCION,T.PUNTO_INSPECCION FROM TIPOACTIVIDAD T
,ACTIVIDAD A WHERE A.CODIGO = <1> AND A.CODIGO_TIPO = <2>
AND T.CODIGO = A.CODIGO_TIPO;

--Registrar Actividades
INSERT INTO ACTIVIDAD
(CODIGO,FECHA_INICIO_PROGRAM,FECHA_FIN_PROGRAM,FECHA_INICIO_REAL,FECH
A_FIN_REAL,ESTADO,CODIGO_TIPO,CODIGO_PROY)
VALUES (<1>,<2>,<3>,<4>,<5>,<6>,<7>,<8> );

--Cargar página de informes de una actividad
SELECT CODIGO, NOMBRE, FECHA
FROM INFORME
WHERE CODIGO_ACT = <1>;

--Cargar página de informe seleccionado
SELECT I.CODIGO, I.FECHA , I.NOMBRE,I.URL_PDF
FROM INFORME I
WHERE I.CODIGO=<1> ;

--Registrar Informe
INSERT INTO INFORME (CODIGO, NOMBRE, FECHA, URL_PDF,
CODIGO_ACT,CODIGO_TIPO_ACT,DNI_EMPLEADO)
VALUES (<1>,<3>,<2>,<4>,<5>,<6>,<7>);

--Cargar página de observaciones
SELECT O.ID , DATE( O.FECHA_CREAC ),
EXTRACT(HOUR FROM O.FECHA_CREAC), O.ESTADO
FROM OBSERVACION O
JOIN INFORME I ON O.CODIGO_INF = I.CODIGO
WHERE I.CODIGO = <0>;

--Boton de filtar observaciones
O.ID , DATE( O.FECHA_CREAC ),
EXTRACT(HOUR FROM O.FECHA_CREAC), O.ESTADO
FROM OBSERVACION O
JOIN INFORME I ON O.CODIGO_INF = I.CODIGO
WHERE I.CODIGO = <0>
AND O.FECHA_CREAC BETWEEN TO_DATE('<2>','DD/MM/YYYY')AND
TO_DATE('<3>','DD/MM/YYYY');

--Cargar pagina de observacion seleccionada
SELECT O.ID , DATE(O.FECHA_CREAC),
EXTRACT( HOUR FROM O.FECHA_CREAC ),
COALESCE(CAST(DATE(O.FECHA_LEV) AS VARCHAR),''),
COALESCE(CAST(EXTRACT(HOUR FROM O.FECHA_LEV) AS
VARCHAR),''), O.ESTADO, O.CONTENIDO
FROM OBSERVACION O

--Cargar comentarios de la observacion
SELECT C.CONTENIDO
FROM COMENTARIO C
JOIN OBSERVACION O ON O.ID = C.ID_OBSERVACION
JOIN INFORME I ON O.CODIGO_INF = I.CODIGO
WHERE O.ID = <1>;

--Actividades en el presente mes

SELECT COUNT(*)
FROM ACTIVIDAD
WHERE FECHA_FIN_REAL IS NULL;

--Numero de informes del mes

SELECT COUNT(*)
FROM INFORME
WHERE FECHA> date_trunc('month', now()::date)
AND FECHA <(SELECT LAST_DAY(SYSTDATE)FROM DUAL);

--Nro de observaciones en el año por mes
SELECT COUNT(*)
FROM OBSERVACION
WHERE
FECHA_CREAC> date_trunc('month', now()::date)
AND FECHA_CREAC<(SELECT LAST_DAY(SYSTDATE)FROM DUAL);
